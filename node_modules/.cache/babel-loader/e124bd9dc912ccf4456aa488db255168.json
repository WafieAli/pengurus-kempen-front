{"remainingRequest":"/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/babel-loader/lib/index.js!/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/srmyit/Projects/master/campaign-manager-frontend/src/views/Admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/srmyit/Projects/master/campaign-manager-frontend/src/views/Admin.vue","mtime":1616693397439},{"path":"/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport User from \"../models/user\";\nimport { adminUser } from \"../modules/admin.module\";\nimport Multiselect from 'vue-multiselect';\nexport default {\n  name: 'Admin',\n  components: {\n    Multiselect: Multiselect\n  },\n  data: function data() {\n    return {\n      user: new User('', '', '', ''),\n      content: '',\n      sent_info: '',\n      received_info: '',\n      submitted: false,\n      message: '',\n      loading: false,\n      //multiselect\n      selectedMultiSelectItems: [],\n      multiSelectItems: [],\n      multiSelectIsLoading: false\n    };\n  },\n  computed: {},\n  mounted: function mounted() {\n    var _this = this;\n\n    adminUser.getAdminContent().then(function (response) {\n      _this.content = response.data;\n    }, function (error) {\n      _this.content = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    });\n  },\n  methods: {\n    getInformarion: function getInformarion() {\n      var _this2 = this;\n\n      this.message = '';\n      this.submitted = true;\n      this.loading = true;\n      this.$validator.validate().then(function (isValid) {\n        if (isValid) {\n          adminUser.getInfo(_this2.$store.state.auth.user, _this2.sent_info).then(function (response) {\n            _this2.loading = false;\n            _this2.received_info = response.data.message;\n            _this2.successful = true;\n          }, function (error) {\n            _this2.loading = false;\n            _this2.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n            _this2.successful = false;\n          });\n        }\n      });\n    },\n    //multiselect\n    limitText: function limitText(count) {\n      return \"and \".concat(count, \" other items\");\n    },\n    asyncFind: function asyncFind(query) {\n      var _this3 = this;\n\n      if (query) {\n        this.multiSelectIsLoading = true;\n        adminUser.getAllUsers(query).then(function (response) {\n          _this3.multiSelectItems = JSON.parse(response.data.message);\n          _this3.multiSelectIsLoading = false;\n        });\n      }\n    },\n    clearAll: function clearAll() {\n      this.multiSelectItems = [];\n    }\n  }\n};",{"version":3,"sources":["Admin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  \n    <div class=\"col-md-12\">\n\n      <h3>{{content}}</h3>\n      \n      <br>\n\n      <div class=\"card card-container\">\n\n        <form name=\"form\" @submit.prevent=\"getInformarion\">\n          <div class=\"form-group\">\n            <label for=\"info\"><b>Info</b></label>\n            <select \n              v-model=\"sent_info\"\n              class=\"form-control\"\n              name=\"info\"            \n            >\n              <option disabled value=\"\">Please select one</option>\n              <option>createdAt</option>\n              <option>password</option>\n            </select>\n            <div\n              v-if=\"submitted && errors.has('info')\"\n              class=\"alert-danger\"\n            >{{errors.first('info')}}</div>\n          </div>\n          <div class=\"form-group\">\n            <button class=\"btn btn-primary btn-block\" :disabled=\"loading\">\n              <span v-show=\"loading\" class=\"spinner-border spinner-border-sm\"></span>\n              <span>Get Info</span>\n            </button>\n          </div>          \n        </form>  \n\n        <label for=\"response\"><b>Response</b></label>\n\n        <textarea class=\"form-control\" \n        v-model=\"received_info\" \n        placeholder=\"Response will be shown here\">\n        </textarea>\n      </div>\n\n      <br/>\n\n      <!-- multiselect -->\n      <div>\n\n        <label class=\"typo__label\" for=\"ajax\">Async multiselect</label>\n\n        <multiselect v-model=\"selectedMultiSelectItems\" \n                     id=\"ajax\" \n                     label=\"username\" \n                     track-by=\"username\" \n                     placeholder=\"Type to search\" \n                     open-direction=\"bottom\" \n                     :options=\"multiSelectItems\" \n                     :multiple=\"true\" \n                     :searchable=\"true\" \n                     :loading=\"multiSelectIsLoading\" \n                     :internal-search=\"false\" \n                     :clear-on-select=\"false\" \n                     :preserve-search=\"false\"\n                     :show-no-results=\"false\" \n                     :hide-selected=\"false\" \n                     :options-limit=\"300\" \n                     :limit=\"3\" \n                     :limit-text=\"limitText\" \n                     :max-height=\"600\"                      \n                     @search-change=\"asyncFind\"\n                     @close=\"clearAll\">\n\n        </multiselect>\n\n\n        <pre class=\"language-json\"><code>{{ selectedMultiSelectItems  }}</code></pre>\n\n      </div>\n\n      <div\n        v-if=\"message\"\n        class=\"alert\"\n        :class=\"successful ? 'alert-success' : 'alert-danger'\"\n      >{{message}}\n      </div>\n\n    </div>\n\n</template>\n\n\n<script>\nimport User from '../models/user';\nimport {adminUser} from '../modules/admin.module';\nimport Multiselect from 'vue-multiselect';\n\nexport default {\n  name: 'Admin',\n    components: {\n    Multiselect\n  },\n  data() {\n    return {\n      user: new User('', '', '', ''),\n      content: '',\n      sent_info:'',\n      received_info:'',\n      submitted: false,\n      message:'',\n      loading:false,\n      //multiselect\n      selectedMultiSelectItems: [],\n      multiSelectItems: [],\n      multiSelectIsLoading: false\n    };\n  },\n  computed: {\n    \n  },\n  mounted() {\n    adminUser.getAdminContent().then(\n      response => {\n        this.content = response.data;\n      },\n      error => {\n        this.content =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString();\n      }\n    );\n  },\n  methods: {\n      getInformarion() {\n      this.message = '';\n      this.submitted = true;\n      this.loading = true;\n      this.$validator.validate().then(isValid => {\n        if (isValid) {\n          adminUser.getInfo(this.$store.state.auth.user, this.sent_info).then(\n            response => {\n              this.loading = false;\n              this.received_info = response.data.message;\n              this.successful = true;\n            },\n            error => {\n              this.loading = false;\n              this.message =\n                (error.response && error.response.data && error.response.data.message) ||\n                error.message ||\n                error.toString();\n              this.successful = false;\n            }\n          );\n        }\n      });\n    },\n\n    //multiselect\n    limitText (count) {\n      return `and ${count} other items`\n    },\n    asyncFind(query) {\n      if(query){\n          this.multiSelectIsLoading = true;\n          adminUser.getAllUsers(query).then(response => {\n            this.multiSelectItems = JSON.parse(response.data.message);\n            this.multiSelectIsLoading = false;\n        })\n      }\n    },\n    clearAll () {\n      this.multiSelectItems = [];\n    }\n  }\n};\n</script>\n\n<style>\n  @import 'https://unpkg.com/vue-multiselect@2.1.0/dist/vue-multiselect.min.css';\n</style>\n"],"sourceRoot":"src/views"}]}