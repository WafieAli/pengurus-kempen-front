{"remainingRequest":"/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/babel-loader/lib/index.js!/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/srmyit/Projects/master/campaign-manager-frontend/src/modules/auth.module.js","dependencies":[{"path":"/Users/srmyit/Projects/master/campaign-manager-frontend/src/modules/auth.module.js","mtime":1616693397437},{"path":"/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport axios from 'axios';\nimport { API_URL, authHeader, userState } from \"./helper.module.js\";\n\nvar AuthService =\n/*#__PURE__*/\nfunction () {\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n  }\n\n  _createClass(AuthService, [{\n    key: \"clear\",\n    value: function clear() {\n      axios.get(API_URL + '/auth/clear', {\n        headers: authHeader()\n      }).then(function (response) {\n        if (response.data.message == 'ok') {\n          localStorage.removeItem('user');\n          location.reload();\n        }\n      });\n    }\n  }, {\n    key: \"login\",\n    value: function login(user) {\n      return axios.post(API_URL + '/auth/login', {\n        username: user.username,\n        password: user.password\n      }).then(function (response) {\n        if (response.data.accessToken) {\n          localStorage.setItem('user', JSON.stringify(response.data)); //this is why the root of your local storage is calles \"user\".\n        }\n\n        return response.data;\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      localStorage.removeItem('user');\n    }\n  }, {\n    key: \"register\",\n    value: function register(user) {\n      return axios.post(API_URL + '/auth/register', {\n        username: user.username,\n        role: user.role,\n        email: user.email,\n        password: user.password\n      });\n    }\n  }]);\n\n  return AuthService;\n}();\n\nexport var authorize = new AuthService();\nexport var auth = {\n  namespaced: true,\n  state: userState(),\n  actions: {\n    login: function login(_ref, user) {\n      var commit = _ref.commit;\n      return authorize.login(user).then(function (user) {\n        commit('loginSuccess', user);\n        return Promise.resolve(user);\n      }, function (error) {\n        commit('loginFailure');\n        return Promise.reject(error);\n      });\n    },\n    logout: function logout(_ref2) {\n      var commit = _ref2.commit;\n      authorize.logout();\n      commit('logout');\n    },\n    register: function register(_ref3, user) {\n      var commit = _ref3.commit;\n      return authorize.register(user).then(function (response) {\n        commit('registerSuccess');\n        return Promise.resolve(response.data);\n      }, function (error) {\n        commit('registerFailure');\n        return Promise.reject(error);\n      });\n    }\n  },\n  mutations: {\n    loginSuccess: function loginSuccess(state, user) {\n      state.status.loggedIn = true;\n      state.user = user;\n    },\n    loginFailure: function loginFailure(state) {\n      state.status.loggedIn = false;\n      state.user = null;\n    },\n    logout: function logout(state) {\n      state.status.loggedIn = false;\n      state.user = null;\n    },\n    registerSuccess: function registerSuccess(state) {\n      state.status.loggedIn = false;\n    },\n    registerFailure: function registerFailure(state) {\n      state.status.loggedIn = false;\n    }\n  }\n};",{"version":3,"sources":["/Users/srmyit/Projects/master/campaign-manager-frontend/src/modules/auth.module.js"],"names":["axios","API_URL","authHeader","userState","AuthService","get","headers","then","response","data","message","localStorage","removeItem","location","reload","user","post","username","password","accessToken","setItem","JSON","stringify","role","email","authorize","auth","namespaced","state","actions","login","commit","Promise","resolve","error","reject","logout","register","mutations","loginSuccess","status","loggedIn","loginFailure","registerSuccess","registerFailure"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {API_URL, authHeader, userState} from './helper.module.js'\n\nclass AuthService {\n  \n  clear(){\n    axios.get(API_URL + '/auth/clear', { headers: authHeader() }).then(response => {\n      if(response.data.message == 'ok')\n      {\n        localStorage.removeItem('user');\n        location.reload();\n      }\n    });\n  }\n\n  login(user) {\n    return axios\n      .post(API_URL + '/auth/login', {\n        username: user.username,\n        password: user.password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem('user', JSON.stringify(response.data)); //this is why the root of your local storage is calles \"user\".\n        }\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n  }\n\n  register(user) {\n    return axios.post(API_URL + '/auth/register', {\n      username: user.username,\n      role: user.role,\n      email: user.email,\n      password: user.password\n    });\n  }\n}\n\nexport var authorize = new AuthService();\n\nexport const auth = {\n  namespaced: true,\n  state: userState(),\n  actions: {\n    login({ commit }, user) { \n      return authorize.login(user).then(\n        user => {\n          commit('loginSuccess', user); \n          return Promise.resolve(user); \n        },\n        error => {\n          commit('loginFailure');\n          return Promise.reject(error);\n        }\n      );\n    },\n    logout({ commit }) {\n      authorize.logout();\n      commit('logout');\n    },\n    register({ commit }, user) {\n      return authorize.register(user).then(\n        response => {\n          commit('registerSuccess');\n          return Promise.resolve(response.data);\n        },\n        error => {\n          commit('registerFailure');\n          return Promise.reject(error);\n        }\n      );\n    },\n  },\n  mutations: {\n    loginSuccess(state, user) {\n      state.status.loggedIn = true;\n      state.user = user;\n    },\n    loginFailure(state) {\n      state.status.loggedIn = false;\n      state.user = null;\n    },\n    logout(state) {\n      state.status.loggedIn = false;\n      state.user = null;\n    },\n    registerSuccess(state) {\n      state.status.loggedIn = false;\n    },\n    registerFailure(state) {\n      state.status.loggedIn = false;\n    }\n  }\n};\n"]}]}