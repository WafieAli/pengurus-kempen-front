{"remainingRequest":"/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/babel-loader/lib/index.js!/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/srmyit/Projects/master/campaign-manager-frontend/src/router.js","dependencies":[{"path":"/Users/srmyit/Projects/master/campaign-manager-frontend/src/router.js","mtime":1616695954012},{"path":"/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/srmyit/Projects/master/campaign-manager-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport Home from \"./views/Home.vue\";\nimport Login from \"./views/Login.vue\";\nimport Register from \"./views/Register.vue\";\nimport { authorize } from \"./modules/auth.module\";\nimport Biodata from \"./views/Biodata.vue\";\nVue.use(Router);\nexport var router = new Router({\n  mode: 'history',\n  routes: [{\n    path: '/',\n    name: 'home',\n    component: Home\n  }, {\n    path: '/home',\n    component: Home\n  }, {\n    path: '/login',\n    component: Login\n  }, {\n    path: '/register',\n    component: Register\n  }, {\n    path: '/profile',\n    name: 'profile',\n    // lazy-loaded\n    component: function component() {\n      return import(\"./views/Profile.vue\");\n    }\n  }, {\n    path: '/admin',\n    name: 'admin',\n    // lazy-loaded\n    component: function component() {\n      return import(\"./views/Admin.vue\");\n    }\n  }, {\n    path: '/moderator',\n    name: 'moderator',\n    // lazy-loaded\n    component: function component() {\n      return import(\"./views/Moderator.vue\");\n    }\n  }, {\n    path: '/user',\n    name: 'user',\n    // lazy-loaded\n    component: function component() {\n      return import(\"./views/User.vue\");\n    }\n  }, {\n    path: '/biodata',\n    //add Biodata page:wafie\n    name: 'biodata',\n    component: Biodata\n  }]\n}); // check Authorized status everytime a navigating action is trigger\n\nrouter.beforeEach(function (to, from, next) {\n  var publicPages = ['/login', '/register', '/home', '/'];\n  var authRequired = !publicPages.includes(to.path);\n  var loggedIn = localStorage.getItem('user'); //deleting the expired token\n\n  authorize.clear(); // trying to access a restricted page + not logged in\n  // redirect to login page\n\n  if (authRequired && !loggedIn) {\n    next('/login');\n  } else {\n    next();\n  }\n});",{"version":3,"sources":["/Users/srmyit/Projects/master/campaign-manager-frontend/src/router.js"],"names":["Vue","Router","Home","Login","Register","authorize","Biodata","use","router","mode","routes","path","name","component","beforeEach","to","from","next","publicPages","authRequired","includes","loggedIn","localStorage","getItem","clear"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,SAAQC,SAAR;AACA,OAAOC,OAAP;AAEAN,GAAG,CAACO,GAAJ,CAAQN,MAAR;AAEA,OAAO,IAAMO,MAAM,GAAG,IAAIP,MAAJ,CAAW;AAC/BQ,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,SAAS,EAAEX;AAHb,GADM,EAMN;AACES,IAAAA,IAAI,EAAE,OADR;AAEEE,IAAAA,SAAS,EAAEX;AAFb,GANM,EAUN;AACES,IAAAA,IAAI,EAAE,QADR;AAEEE,IAAAA,SAAS,EAAEV;AAFb,GAVM,EAcN;AACEQ,IAAAA,IAAI,EAAE,WADR;AAEEE,IAAAA,SAAS,EAAET;AAFb,GAdM,EAkBN;AACEO,IAAAA,IAAI,EAAE,UADR;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGE;AACAC,IAAAA,SAAS,EAAE;AAAA,aAAM,6BAAN;AAAA;AAJb,GAlBM,EAwBN;AACEF,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGE;AACAC,IAAAA,SAAS,EAAE;AAAA,aAAM,2BAAN;AAAA;AAJb,GAxBM,EA8BN;AACEF,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGE;AACAC,IAAAA,SAAS,EAAE;AAAA,aAAM,+BAAN;AAAA;AAJb,GA9BM,EAoCN;AACEF,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGE;AACAC,IAAAA,SAAS,EAAE;AAAA,aAAM,0BAAN;AAAA;AAJb,GApCM,EA0CN;AACEF,IAAAA,IAAI,EAAE,UADR;AACoB;AAClBC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,SAAS,EAAEP;AAHb,GA1CM;AAFuB,CAAX,CAAf,C,CAoDP;;AACCE,MAAM,CAACM,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpC,MAAMC,WAAW,GAAG,CAAC,QAAD,EAAW,WAAX,EAAwB,OAAxB,EAAiC,GAAjC,CAApB;AACA,MAAMC,YAAY,GAAG,CAACD,WAAW,CAACE,QAAZ,CAAqBL,EAAE,CAACJ,IAAxB,CAAtB;AACA,MAAMU,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAjB,CAHoC,CAKnC;;AACAlB,EAAAA,SAAS,CAACmB,KAAV,GANmC,CAQpC;AACA;;AACA,MAAIL,YAAY,IAAI,CAACE,QAArB,EAA+B;AAC7BJ,IAAAA,IAAI,CAAC,QAAD,CAAJ;AACD,GAFD,MAEO;AACLA,IAAAA,IAAI;AACL;AACF,CAfD","sourcesContent":["import Vue from 'vue';\nimport Router from 'vue-router';\nimport Home from './views/Home.vue';\nimport Login from './views/Login.vue';\nimport Register from './views/Register.vue';\nimport {authorize} from './modules/auth.module';\nimport Biodata from './views/Biodata.vue';\n\nVue.use(Router);\n\nexport const router = new Router({\n  mode: 'history',\n  routes: [\n    {\n      path: '/',\n      name: 'home',\n      component: Home\n    },\n    {\n      path: '/home',\n      component: Home\n    },\n    {\n      path: '/login',\n      component: Login\n    },\n    {\n      path: '/register',\n      component: Register\n    },\n    {\n      path: '/profile',\n      name: 'profile',\n      // lazy-loaded\n      component: () => import('./views/Profile.vue')\n    },\n    {\n      path: '/admin',\n      name: 'admin',\n      // lazy-loaded\n      component: () => import('./views/Admin.vue')\n    },\n    {\n      path: '/moderator',\n      name: 'moderator',\n      // lazy-loaded\n      component: () => import('./views/Moderator.vue')\n    },\n    {\n      path: '/user',\n      name: 'user',\n      // lazy-loaded\n      component: () => import('./views/User.vue')\n    },\n    {\n      path: '/biodata', //add Biodata page:wafie\n      name: 'biodata',\n      component: Biodata\n    }\n  ]\n});\n\n// check Authorized status everytime a navigating action is trigger\n router.beforeEach((to, from, next) => {\n   const publicPages = ['/login', '/register', '/home', '/'];\n   const authRequired = !publicPages.includes(to.path);\n   const loggedIn = localStorage.getItem('user');\n\n    //deleting the expired token\n    authorize.clear()\n\n   // trying to access a restricted page + not logged in\n   // redirect to login page\n   if (authRequired && !loggedIn) {\n     next('/login');\n   } else {\n     next();\n   }\n });\n"]}]}